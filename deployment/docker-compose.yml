version: '3.8'

services:
  coresense:
    build: 
      context: ..
      dockerfile: deployment/Dockerfile
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://coresense:coresense@postgres:5432/coresense
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - FRONTEND_URL=http://localhost:8501
    volumes:
      - ../data:/app/data
      - ../.env:/app/.env
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: coresense
      POSTGRES_USER: coresense
      POSTGRES_PASSWORD: coresense
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coresense"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: